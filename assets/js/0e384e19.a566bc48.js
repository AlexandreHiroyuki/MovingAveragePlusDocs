"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[976],{5680:(e,r,t)=>{t.d(r,{xA:()=>g,yg:()=>d});var a=t(6540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),p=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},g=function(e){var r=p(e.components);return a.createElement(s.Provider,{value:r},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=p(t),y=n,d=c["".concat(s,".").concat(y)]||c[y]||u[y]||i;return t?a.createElement(d,o(o({ref:r},g),{},{components:t})):a.createElement(d,o({ref:r},g))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=y;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},5436:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(8168),n=(t(6540),t(5680));const i={sidebar_position:1},o="\ud83d\udcbe Installation",l={unversionedId:"intro",id:"intro",title:"\ud83d\udcbe Installation",description:"1. Clone the repository and download the zip file at https://github.com/AlexandreHiroyuki/MovingAverage_ArduinoLibrary.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/MovingAveragePlusDocs/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Moving Average+ Methods",permalink:"/MovingAveragePlusDocs/docs/category/moving-average-methods"}},s={},p=[],g={toc:p},c="wrapper";function u(e){let{components:r,...t}=e;return(0,n.yg)(c,(0,a.A)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"-installation"},"\ud83d\udcbe Installation"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"Clone the repository and download the zip file at ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/AlexandreHiroyuki/MovingAverage_ArduinoLibrary"},"https://github.com/AlexandreHiroyuki/MovingAverage_ArduinoLibrary"),".\nAlso, you can see and download all releases at ",(0,n.yg)("a",{parentName:"li",href:"https://github.com/AlexandreHiroyuki/MovingAverage_ArduinoLibrary/releases"},"https://github.com/AlexandreHiroyuki/MovingAverage_ArduinoLibrary/releases"),"."),(0,n.yg)("li",{parentName:"ol"},"Drag and drop it on ",(0,n.yg)("inlineCode",{parentName:"li"},"Arduino/libraries/")," folder."),(0,n.yg)("li",{parentName:"ol"},"Include it on your code.")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-cpp"},"#include <MovingAveragePlus.h>\n")),(0,n.yg)("admonition",{type:"tip"},(0,n.yg)("ul",{parentName:"admonition"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"You can also download and install the library through the official library manager on the Arduino IDE ",(0,n.yg)("a",{parentName:"p",href:"https://www.arduino.cc/reference/en/libraries/movingaverageplus/"},"https://www.arduino.cc/reference/en/libraries/movingaverageplus/"),".\nAccess ",(0,n.yg)("a",{parentName:"p",href:"https://www.arduino.cc/en/guide/libraries"},"https://www.arduino.cc/en/guide/libraries")," to see more details about installing libraries on Arduino IDE.")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},"Another site that lists Arduino libraries accepted by the official library manager ",(0,n.yg)("a",{parentName:"p",href:"https://www.arduinolibraries.info/libraries/moving-average-plus"},"https://www.arduinolibraries.info/libraries/moving-average-plus"),".")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},(0,n.yg)("em",{parentName:"strong"},"\u2014Recommended Platform\u2014"))," Now it's possible to install this library on the\xa0",(0,n.yg)("a",{parentName:"p",href:"https://registry.platformio.org/libraries/alexandrehiroyuki/MovingAveragePlus"},"PlatformIO Registry"),"!")))),(0,n.yg)("hr",null),(0,n.yg)("h1",{id:"-getting-started"},"\ud83d\udca1 Getting Started"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"You can easily try out the library by running the example code."),(0,n.yg)("li",{parentName:"ol"},"Just open the subfolder ",(0,n.yg)("inlineCode",{parentName:"li"},"MovingAverage_ArduinoLibrary/examples/"),"."),(0,n.yg)("li",{parentName:"ol"},"Then try compiling the ",(0,n.yg)("inlineCode",{parentName:"li"},"moving_average_print.ino"),"."),(0,n.yg)("li",{parentName:"ol"},"Open the serial monitor."),(0,n.yg)("li",{parentName:"ol"},"Then see the array magically moving and calculating it average!")),(0,n.yg)("hr",null),(0,n.yg)("h1",{id:"-moving-average-methods"},"\ud83d\udce6 Moving Average+ Methods"),(0,n.yg)("p",null,"The ",(0,n.yg)("strong",{parentName:"p"},"MovingAveragePlus")," class abstracts the implementation of a circular array in order to calculate the arithmetic average of its members.\nBecause it is a circular array, the next input will replace the oldest element (represented by the first index), so it is also possible to call it a ",(0,n.yg)("strong",{parentName:"p"},"FIFO queue"),"."),(0,n.yg)("p",null,"If you are used to the C++ Standard Library, it will be easier to learn the methods since they follow the same pattern of name and logic."),(0,n.yg)("p",null,(0,n.yg)("em",{parentName:"p"},"Click on the link below to see more about the class methods.")))}u.isMDXComponent=!0}}]);