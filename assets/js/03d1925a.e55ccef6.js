"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[572],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||l;return r?n.createElement(f,o(o({ref:t},c),{},{components:r})):n.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2960:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={sidebar_position:3},o="\ud83c\udf0a Fill",s={unversionedId:"class-methods/array-methods/fill",id:"class-methods/array-methods/fill",title:"\ud83c\udf0a Fill",description:"Fills and overwrites the array with the received element.",source:"@site/docs/class-methods/array-methods/fill.md",sourceDirName:"class-methods/array-methods",slug:"/class-methods/array-methods/fill",permalink:"/MovingAveragePlusDocs/docs/class-methods/array-methods/fill",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/class-methods/array-methods/fill.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\ud83e\uddf9 Clear",permalink:"/MovingAveragePlusDocs/docs/class-methods/array-methods/clear"},next:{title:"Partials",permalink:"/MovingAveragePlusDocs/docs/category/partials"}},i={},p=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:3},{value:"\ud83d\udd2e Example",id:"-example",level:3},{value:"\u23f1 Complexity",id:"-complexity",level:3}],c={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"-fill"},"\ud83c\udf0a Fill"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Fills and overwrites")," the array with the received element."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Methods that ",(0,a.kt)("strong",{parentName:"em"},"return pointers")," allow ",(0,a.kt)("strong",{parentName:"em"},"chained calls"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"MovingAveragePlus<unsigned int> intAverage(10);\n\nunsigned int x = 5, y = 10;\nunsigned int result, first, last;\n\nresult = intAverage.push(x).push(y).get();\nfirst = intAverage.push(56).front();\nlast = intAverage.push(8).back();\n")),(0,a.kt)("h3",{id:"-syntax"},"\ud83d\udcdd Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"MovingAveragePlus<TypeOfArray> &fill(TypeOfArray fill_value)\n")),(0,a.kt)("h3",{id:"-example"},"\ud83d\udd2e Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// 0 0 0 0 0\nMovingAveragePlus<unsigned int> intAverage(5);\n\n// 4 3 2 1 0\nintAverage.push(1).push(2).push(3).push(4)\n\n// 10 10 10 10 10\nintAverage.fill(10)\n")),(0,a.kt)("h3",{id:"-complexity"},"\u23f1 Complexity"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Linear (O(n))")," in the ",(0,a.kt)("strong",{parentName:"p"},"array size"),"."))}m.isMDXComponent=!0}}]);