"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[450],{5680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>y});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(r),m=a,y=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(y,i(i({ref:t},u),{},{components:r})):n.createElement(y,i({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7372:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(8168),a=(r(6540),r(5680));const o={sidebar_position:6},i="\ud83d\udccd Operator[]",s={unversionedId:"class-methods/input-output/operator-index",id:"class-methods/input-output/operator-index",title:"\ud83d\udccd Operator[]",description:"Returns the requested element at the relative position of the array (the first index is aways the most recent element added).",source:"@site/docs/class-methods/input-output/operator-index.md",sourceDirName:"class-methods/input-output",slug:"/class-methods/input-output/operator-index",permalink:"/MovingAveragePlusDocs/docs/class-methods/input-output/operator-index",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/class-methods/input-output/operator-index.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"\u2b05\ufe0f Back",permalink:"/MovingAveragePlusDocs/docs/class-methods/input-output/back"},next:{title:"\ud83d\udccd AtIndex",permalink:"/MovingAveragePlusDocs/docs/class-methods/input-output/at-index"}},p={},l=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:3},{value:"\ud83d\udd2e Example",id:"-example",level:3},{value:"\u23f1 Complexity",id:"-complexity",level:3}],u={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.yg)(c,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"-operator"},"\ud83d\udccd Operator[]"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Returns")," the requested element at the ",(0,a.yg)("strong",{parentName:"p"},"relative")," position of the ",(0,a.yg)("strong",{parentName:"p"},"array")," (the first index is aways the most recent element added)."),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"If the requested index exceed the array size, it will return a 0.")),(0,a.yg)("h3",{id:"-syntax"},"\ud83d\udcdd Syntax"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"TypeOfArray operator[](int index)\n")),(0,a.yg)("h3",{id:"-example"},"\ud83d\udd2e Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// This will create an MovingAverage of size 4 and int type\nMovingAveragePlus<int> intAverage(4);\n\n// Array[]: 1 0 0 0\nintAverage.push(1);\n// Array[]: 2 1 0 0\nintAverage.push(2);\n// Array[]: 3 2 1 0\nintAverage.push(3);\n// Array[]: 4 3 2 1\nintAverage.push(4);\n\n// Return 4\nintAverage[0];\n")),(0,a.yg)("h3",{id:"-complexity"},"\u23f1 Complexity"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Constant (O(1))"),"."))}d.isMDXComponent=!0}}]);