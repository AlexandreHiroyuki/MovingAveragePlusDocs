"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[874],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>y});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=n.createContext({}),p=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(i.Provider,{value:r},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,y=u["".concat(i,".").concat(m)]||u[m]||g[m]||l;return t?n.createElement(y,o(o({ref:r},c),{},{components:t})):n.createElement(y,o({ref:r},c))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=m;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<l;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5106:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=t(8168),a=(t(6540),t(5680));const l={sidebar_position:3},o="\ud83c\udf0a Fill",s={unversionedId:"class-methods/array-methods/fill",id:"class-methods/array-methods/fill",title:"\ud83c\udf0a Fill",description:"Fills and overwrites the array with the received element.",source:"@site/docs/class-methods/array-methods/fill.md",sourceDirName:"class-methods/array-methods",slug:"/class-methods/array-methods/fill",permalink:"/MovingAveragePlusDocs/docs/class-methods/array-methods/fill",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/class-methods/array-methods/fill.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\ud83e\uddf9 Clear",permalink:"/MovingAveragePlusDocs/docs/class-methods/array-methods/clear"},next:{title:"Partials",permalink:"/MovingAveragePlusDocs/docs/category/partials"}},i={},p=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:3},{value:"\ud83d\udd2e Example",id:"-example",level:3},{value:"\u23f1 Complexity",id:"-complexity",level:3}],c={toc:p},u="wrapper";function g(e){let{components:r,...t}=e;return(0,a.yg)(u,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"-fill"},"\ud83c\udf0a Fill"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Fills and overwrites")," the array with the received element."),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"Methods that ",(0,a.yg)("strong",{parentName:"em"},"return pointers")," allow ",(0,a.yg)("strong",{parentName:"em"},"chained calls"),".")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"MovingAveragePlus<unsigned int> intAverage(10);\n\nunsigned int x = 5, y = 10;\nunsigned int result, first, last;\n\nresult = intAverage.push(x).push(y).get();\nfirst = intAverage.push(56).front();\nlast = intAverage.push(8).back();\n")),(0,a.yg)("h3",{id:"-syntax"},"\ud83d\udcdd Syntax"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"MovingAveragePlus<TypeOfArray> &fill(TypeOfArray fill_value)\n")),(0,a.yg)("h3",{id:"-example"},"\ud83d\udd2e Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"// 0 0 0 0 0\nMovingAveragePlus<unsigned int> intAverage(5);\n\n// 4 3 2 1 0\nintAverage.push(1).push(2).push(3).push(4)\n\n// 10 10 10 10 10\nintAverage.fill(10)\n")),(0,a.yg)("h3",{id:"-complexity"},"\u23f1 Complexity"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Linear (O(n))")," in the ",(0,a.yg)("strong",{parentName:"p"},"array size"),"."))}g.isMDXComponent=!0}}]);