"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[295],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>v});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(a),d=n,v=u["".concat(o,".").concat(d)]||u[d]||m[d]||i;return a?r.createElement(v,l(l({ref:t},p),{},{components:a})):r.createElement(v,l({ref:t},p))}));function v(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<i;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7493:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:2},l="\ud83d\udee0 Create Partial",s={unversionedId:"class-methods/partials/create-partial",id:"class-methods/partials/create-partial",title:"\ud83d\udee0 Create Partial",description:"When you create a Partial, the structure will create a reactive variable behind the scenes. The name reactive represents how the variables will automatically update their values without more instructions.",source:"@site/docs/class-methods/partials/create-partial.md",sourceDirName:"class-methods/partials",slug:"/class-methods/partials/create-partial",permalink:"/MovingAveragePlusDocs/docs/class-methods/partials/create-partial",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/class-methods/partials/create-partial.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcca The Partials Concept",permalink:"/MovingAveragePlusDocs/docs/class-methods/partials/intro"},next:{title:"\ud83d\udce4 Get Partial",permalink:"/MovingAveragePlusDocs/docs/class-methods/partials/get-partial"}},o={},c=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:3},{value:"\ud83d\udd2e Example",id:"-example",level:3},{value:"\u23f1 Complexity",id:"-complexity",level:3}],p={toc:c},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"-create-partial"},"\ud83d\udee0 Create Partial"),(0,n.kt)("p",null,"When you create a Partial, the structure will create a reactive variable behind the scenes. The name reactive represents how the variables will automatically update their values without more instructions.\nThe Partial will keep tracking of the requested sum size.\nRequesting a bigger size than the main array will be understood as the maximum array size."),(0,n.kt)("h3",{id:"-syntax"},"\ud83d\udcdd Syntax"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"size_t create_partial(size_t sum_size)\n")),(0,n.kt)("h3",{id:"-example"},"\ud83d\udd2e Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"MovingAveragePlus<unsigned int> intAverage(10);\n\nsize_t partial_id = intAverage.create_partial(3);\nsize_t partial_2_id = intAverage.create_partial(5);\n\n// 10 4 3 2 1 0 0 0 0 0\nintAverage.push(1).push(2).push(3).push(4).push(10);\n\n// (10 + 4 + 3) / 3 = 5\nintAverage.get_partial(partial_id);\n// (10 + 4 + 3 + 2 + 1) / 5 = 4\nintAverage.get_partial(partial_2_id);\n")),(0,n.kt)("h3",{id:"-complexity"},"\u23f1 Complexity"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Constant (O(1))"),"."))}m.isMDXComponent=!0}}]);